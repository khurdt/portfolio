let work=function(){let t=[{name:"Chat App",github:"https://github.com/khurdt/chat-app",view:"https://github.com/khurdt/chat-app#simple-chat-application",description:'An app to to be able to send texts, images, and current location. This app utilized "Expo" for making universal native apps for Android, iOS, and the web with JavaScript and React, "Firebase" as its real-time database, and "Gifted Chat" as its Chat UI.',img:"./images/chat-app.png",modalimg:"./images/holding-phone.png"},{name:"Meet App",github:"https://github.com/khurdt/meet-app",view:"https://khurdt.github.io/meet-app/",description:"an App for users to see events in different cities and potentially meet with others. Using Google Calendars as my data source and a serverless function from AWS I could render a list of events making it look pretty with Bootstrap.  I also used recharts as a way to make pie and bar charts. This app was also converted into a Progressive Web App(PWA) being able to be offline and used as either as a desktop or mobile app.",img:"./images/meet.png",modalimg:"./images/event-ticket-png.png"},{name:"Movie Info App",github:"https://github.com/khurdt/movie-app-api",view:"https://kh-cinema-app.netlify.app/",description:"An App for users to see movies and their info and keep track of favorites. Built server and database using node, express, and mongo. Enjoyed creating endpoints and connecting them to the database. Also built client side using React, Redux, and Bootstrap. One of the difficulties or main cause of bugs was trying to pass props and functions without losing their state or loading them before page rendered. The other difficulty was how to keep all the data the same as different views updated.",img:"./images/movie-app.png",modalimg:"./images/lego.png"},{name:"Pokedex App",github:"https://github.com/khurdt/pokedex.github.io",github2:"https://khurdt.github.io/portfolio/work.html",github2title:"No API",view:"https://khurdt.github.io/pokedex.github.io/",description:"An app that fetches pokemon from an API and displays its image and information within a modal.",img:"./images/pokedex.png",modalimg:"./images/venusaur.png"},{name:"Drawing App",github:'github__link" href="https://github.com/khurdt/drawing.app.github.io',github2:"https://khurdt.github.io/portfolio/work.html",github2title:"No API",view:"https://khurdt.github.io/drawing-app.github.io/",description:"An app for drawing on a blank canvas with different colors, multiple width sizes, and mirror or quardrant lines.",img:"./images/drawing.png",modalimg:"./images/color1.png"},{name:"To Do List App",github:'github__link" href="https://github.com/khurdt/to-do-list.app.github.io',github2:"https://khurdt.github.io/portfolio/work.html",github2title:"No API",view:"https://khurdt.github.io/to-do-list-app.github.io/",description:"An app that displays a list from the provided input and allows you to highlight, cross out, or delete items.",img:"./images/todolist.png",modalimg:"./images/todolist (1).png"}];let e=document.querySelector("#control-container"),i=document.querySelector(".close-icon");function a(t){e.innerHTML="",i=document.createElement("img"),i.classList.add("close-icon"),i.src="./images/close-icon.png";let a=document.createElement("div");a.classList.add("modal-list");let n=document.createElement("img");n.classList.add("modal-item"),n.src=t.modalimg;let s=document.createElement("a");s.classList.add("modal-item");let d=document.createTextNode("See Project Now");s.appendChild(d),s.href=t.view,s.target="_blank";let p=document.createElement("a");p.classList.add("modal-item");let l=document.createTextNode("See GitHub");p.appendChild(l),p.href=t.github,p.target="_blank";let r=document.createElement("p");r.classList.add("modal-item"),r.innerText=t.description,a.appendChild(n),a.appendChild(r),a.appendChild(s),a.appendChild(p),e.appendChild(i),e.appendChild(a),i.addEventListener("click",(()=>{o()}))}function o(){e.classList.contains("display")?(e.classList.remove("display"),i.style.display="none"):(e.classList.add("display"),i.style.display="block")}return window.addEventListener("keydown",(t=>{"Escape"===t.key&&e.classList.contains("display")&&e.classList.remove("display")})),{loadWork:function(){t.forEach((function(t){t.name,t.github,t.view,t.description}))},displayWork:function(t){let e=document.querySelector("#work"),i=document.createElement("li"),n=document.createElement("button"),s=document.createElement("h4");i.classList.add("list-item"),n.classList.add("grid__item"),n.style.backgroundImage="url("+t.img+")",s.innerText=t.name,i.appendChild(s),i.appendChild(n),e.appendChild(i),n.addEventListener("click",(()=>{a(t),o()}))},displayDetails:a,getAll:function(){return t}}}();work.getAll().forEach((function(t){work.displayWork(t)}));
//# sourceMappingURL=work.9dc7798d.js.map
